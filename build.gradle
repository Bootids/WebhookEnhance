plugins {
    id "java"
    id "org.jetbrains.kotlin.jvm" version "1.3.30"
    id "application"
    id "com.github.johnrengelman.shadow" version "4.0.2"
}
apply plugin: 'java'
apply plugin: 'kotlin-kapt'

group "pers.bootis"
version "1.0-SNAPSHOT"

sourceCompatibility = 1.8

repositories {
    maven { url "http://192.168.23.100:8081/repository/maven-public/" }
    maven { url "http://192.168.23.100.tech:8081/repository/gradle-plugin/" }
}

version = System.getProperty("version") ?: "1.0-SNAPSHOT"

ext {
    vertxVersion = "3.7.0"
    guiceVersion = "4.2.2"
    kotlinVersion = "1.3.11"
    junitJupiterVersion = "5.3.2"
    assertjCoreVersion = "3.11.1"
    logbackVersion = "1.2.3"
    slf4jApiVersion = "1.7.25"
    junitPlatformLauncher = "1.3.2"
}

dependencies {
    compile "io.vertx:vertx-core:${vertxVersion}"
    compile "io.vertx:vertx-web:${vertxVersion}"
    kapt "io.vertx:vertx-codegen:${vertxVersion}:processor"
    compileOnly "io.vertx:vertx-codegen:${vertxVersion}"
    compile "io.vertx:vertx-rx-java2:${vertxVersion}"
    compile "io.vertx:vertx-lang-kotlin:${vertxVersion}"
    compile "io.vertx:vertx-web-client:${vertxVersion}"
    compile "io.vertx:vertx-mysql-postgresql-client:${vertxVersion}"
    compile "io.vertx:vertx-web-api-service:${vertxVersion}"
    compile 'com.google.code.gson:gson:2.8.5'
    compile "org.yaml:snakeyaml:1.23"
    compile "com.google.inject:guice:${guiceVersion}"
    compile "ch.qos.logback:logback-classic:${logbackVersion}"
    compile "org.slf4j:slf4j-api:${slf4jApiVersion}"
    testCompile "org.junit.platform:junit-platform-launcher:${junitPlatformLauncher}"
    testCompile "io.vertx:vertx-junit5:${vertxVersion}"
    testCompile "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}"
    testCompile "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"
    testCompile "org.junit.jupiter:junit-jupiter-params:${junitJupiterVersion}"
    testCompile "org.assertj:assertj-core:${assertjCoreVersion}"
}

mainClassName = "io.vertx.core.Launcher"
def mainVerticleName = "pers.bootis.webhook.enhance.Application"

shadowJar {
    manifest {
        attributes "Main-Verticle": mainVerticleName
    }
}

task copyRightConfig(type: Copy) {
    copy {
        println("copyRightConfig task begins")
        from("src/main/resources") {
            include("**/*.*")
        }
        into("conf/")
        println("copyRightConfig task ends")
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
